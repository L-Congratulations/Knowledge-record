一、输入输出
1.1、输出
用print()在括号中加上字符串，就可以向屏幕上输出指定的文字
print()函数也可以接受多个字符串，用逗号“,”隔开，就可以连成一串输出，如果不加，进行分割，用空格或者不分割那么输出的结果就和写在同一个引号内的一样
print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 end=""：
print( x, end=" " )
print( y, end=" " )
print()
1.2、输入
现在，你已经可以用print()输出你想要的结果了。但是，如果要让用户从电脑输入一些字符怎么办？Python提供了一个input()，可以让用户输入字符串，
并存放到一个变量里。比如输入用户的名字：
>>> name = input()
Michael
当你输入name = input()并按下回车后，Python交互式命令行就在等待你的输入了。这时，你可以输入任意字符，然后按回车后完成输入。
输入完成后，不会有任何提示，Python交互式命令行又回到>>>状态了。那我们刚才输入的内容到哪去了？答案是存放到name变量里了。可以直接输入
name查看变量内容：
>>> name
'Michael'

输入是Input，输出是Output，因此，我们把输入输出统称为Input/Output，或者简写为IO。

二、python语法
2.1 、Python的语法比较简单，采用缩进方式，写出来的代码就像下面的样子：
缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数
a = 100
if a >= 0:
    print(a)
else:
    print(-a)
    
else:
    print ("Answer")
  print ("False")    # 缩进不一致，会导致运行错误
  
2.2 、以#开头的语句是注释，注释是给人看的，可以是任意内容，解释器会忽略掉注释。其他每一行都是一个语句，当语句以冒号:结尾时，缩进的语句视为代码块。
2.3、最后，请务必注意，Python程序是大小写敏感的，如果写错了大小写，程序会报错。
2.4、多行语句
Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠(\)来实现多行语句，例如：
total = item_one + \
        item_two + \
        item_three
在 [], {}, 或 () 中的多行语句，不需要使用反斜杠(\)，例如：
total = ['item_one', 'item_two', 'item_three',
        'item_four', 'item_five']        
三、数据类型和变量
3.1、数据类型
python中数有四种类型：整数、长整数、浮点数和复数。
整数， 如 1
长整数 是比较大的整数
浮点数 如 1.23、3E-2
复数 如 1 + 2j、 1.1 + 2.2j
3.2、字符串
按字面意义级联字符串，如"this " "is " "string"会被自动转换为this is string。
自然字符串， 通过在字符串前加r或R。 如 r"this is a line with \n" 则\n会显示，并不是换行。
3.3、空行
空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。
记住：空行也是程序代码的一部分。

3.4、同一行显示多条语句
Python可以在同一行中使用多条语句，语句之间使用分号(;)分割，以下是一个简单的实例：
#!/usr/bin/python3

import sys; x = 'runoob'; sys.stdout.write(x + '\n')
执行以上代码，输入结果为：
$ python3 test.py
runoob

3.5、多个语句构成代码组
缩进相同的一组语句构成一个代码块，我们称之代码组。
像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。
我们将首行及后面的代码组称为一个子句(clause)。
如下实例：
if expression : 
   suite
elif expression : 
   suite 
else : 
   suite
