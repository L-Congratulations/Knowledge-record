----------------------按菜鸟教程先熟悉一些基本语法和用法主要了解几大块：比如路由、等等------------------------------
 一、基础学习：
  1、插值：主要包括文本插值、html、属性、指令、表达式、参数和修饰符
    （1）文本插值：数据绑定最常见的形式就是使用 “Mustache” 语法（双大括号）的文本插值：<span>Message: {{ msg }}</span>
        Mustache 标签将会被替代为对应数据对象上 msg 属性的值。无论何时，绑定的数据对象上 msg 属性发生了改变，插值处的内容都会更新。
        通过使用 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新。但请留心这会影响到该节点上所有的数据绑定：
        <span v-once>This will never change: {{ msg }}</span>
        
        {{msg}}将他看做一个整体可以进行多种组合如:
         <span>Message: {{ msg }}asdawdadadwa</span>
         <span>Message: "{{ msg }}"</span>//在vue里并不会把"{{msg}}"解析成字符串而是将{{msg}}看做了一个整体然后把那个整体解析为字符串
         <h1>demo:“{{ msg }}”按时大大哇"啊啊啊”</h1>
         
         
         小结：{{msg}}是一个整体    
              无论何时，绑定的数据对象上 msg 属性发生了改变，插值处的内容都会更新。
        --------------------------------------
        总结：
        1.template（模板）使用小结：template标签首先是一个标签<template></template>然后顾名思义，这是一个模板。顾名思义就是前端模版, 
        里边的脚本图片都不会执行, 直到被使用之后.目的是为了实现前端模块化的大计...
            1.标签内容隐藏性
              上面这个<template>标签上没有设置display: none;，注意到了没有。为何？这只是发挥了<template>标签元素的原本特性，
              天生display:none，时模板元素内部内容是死活不会呈现的。因此，无需设置隐藏。这就是HTML5 <template>标签元素特征之一：
              标签内容隐藏性.          
            2. 标签位置任意性
             除了上面<template>子元素天然隐藏外，<template>标签还有一个特性，就是位置任意性，这非常类似<script>或者<style>标签，
             可以在<head>中，也可以在<body>或者<frameset>中。
            3. childNodes无效性
             虽然，肉眼看上去是<template>标签里面还有很多子标签，这种惯性思维在这里是不受用的。假设变量template是我们获得的一个<template>
             标签DOM（里面一大堆HTML代码），你会发现：template.childNodes是个空大屁。我们可以使用template.innerHTML获取完整的HTML片段。
             如果你非得获取“伪子元素”。也是有办法的，OK，睁大眼睛，要使用content属性。

             简言之是：可以放在任意位置的标签，特性是里面的脚本直到被使用后才会执行


            （比如需要ajax刷新一个列表，以前的做法是后端生成html返回，或者前端用DOM构建后加入，但现在有了template标签，
            html的架构就不需要程序管了，只需要在特定的位置加入ajax请求到的数据即可，比如img的src或者其他text之类的
            ，然后clone这个DOM，加入列表。其实许多人以前也应该做过类似的事情，把一段html隐藏起来，然后clone它并修改里面的属性或者内容，
            得到一个DOM，加入列表并显示，用来刷新ajax列表。---------还是有些模糊）

        
        
        ----------------------------------------
