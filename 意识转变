学习方法：
不求弄懂，但要坚持；
不求记住，但要勤用；
不求理论，但要效果；
多去实践，然后搜索，最后才是提问。
1、不求弄懂，但要坚持；很多新手上来犯的第一个错误就是：总想把今天学的东西弄懂了。因为这个原因而半途而废也是挺可惜的，所以说要坚持，这个跟毅力无关啊，
只是你没吃饱呢就继续吃，别把那三千克装的小馒头往边上一扔，高喊着：这东西根本吃不饱！
只要吃自然有吃饱的时候，这没什么难度，只是要意识到这个问题才行。

对自己要求：1、遇到了先用，不会就查。碰到困难解决，暂时不去探根求源。主要是从这么几个角度出发：一是知识体系太大短时间内有可能找不到一点头绪，将来接触的
              多了会串联起来，这样理解更方便，不能浪费大量时间在那个不知道哪里或者已经修复的bug原理上。
           2、将遇到的问题记录下来，自己做个备忘录。仔细记录自己处理的过程方法。隔三差五去回顾，不能问题出了然后过两天就忘了。 
           3、归根一点：遇到就用，记住比探根求源收获更大。（并不是说不去探求原理，只不过是没必要花大量时间去研究，有意识是对的）
2、不求记住，但要勤用；不求记住，一说代码就死记硬背，或者说自己英文不好，学这个肯定不容易……碍的着么？HTML 里常用的单词也就那么十几个吧，还有好几个
就是一个字母的，CSS 里常用的兴许有三十个。用的熟了就是自然而然的事情了，那么记得多用用它们哦，至于背，快算了吧，我到现在还是边查边写的，
一样写的很开心。  

对自己要求：1、在写代码过程中不用刻意去记住某个单词的拼法，但要熟悉他的效果，方便索引，在查的时候迅速定位。
           2、多写，多看，多用。不要吝惜代码，次数多了熟能生巧，潜移默化就记住了。 
           
3、不求理论，但要效果；我不跟你谈理论，你也别跟我纠结这些理论。去做，先设法达到目的，用的多了就该总结出自己的一套经验来了，然后对照那些理论看看，
或者英雄所见略同，或者恍然大悟茅塞顿开，这才是理论的正确用法。否则你开始看这些理论却有完全搞不懂他们，留着做什么？死记硬背应对应试教育么？

对自己要求：1、先实现效果，不去纠结理论，用得多了就能总结出自己的一套经验来。一上来就看理论有的时候是懵逼状态，花大量时间还看不懂，留着做什么？
            死记硬背应对应试教育么？不要花大量时间去纠结那些不知所云的东西，你不是煞笔。
          
4、多去实践，然后搜索，最后才是提问。看懂了，不算会了，因为你未必做的出来；做出来了，不算会了，因为你未必可以解决问题。出问题了，要开心啊
，这才是真正学习的机会，遇到问题解决问题才是真正的硬实力。  

回答别人的问题也是一个自我学习的过程。会发现原来还有很多自己意想不到的细节，然后启发自己很多东西。



总结：去做，去记。不纠结。不要死记硬背理论知识，不是考试，即使背了长时间不用照样会忘得一干二净。

      只要不计后果把东西做出来就好了，理论什么的会水到渠成的！
