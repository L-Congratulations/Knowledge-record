模板引擎：此处针对node 的ejs模板引擎来自己解析
 1、模板引擎（Template Engine）是一个将页面模板和数据结合起来生成 html 的工具。
  上例中，我们只是返回纯文本给浏览器，现在我们修改代码返回一个 html 页面给浏览器。
  此处俩问题：：：因为是渲染好了之后返回给浏览器，是不是每次数据刷新的时候都要刷新整个html？？？，，答案应该是肯定的吧，
                要不也不会出异步ajax了
          疑问二：因为之前接触java的Struts2框架写的一些东西，所以在模板引擎里是可以引用ajax异步调用方法的，难道在ajax
                  调用异步的数据是局部刷新？不需要刷新整个页什么意义？
                  
                  此处搭demo探索
                  
  2、模板引擎的优势是什么：我们使用模板引擎通常不是一个页面对应一个模板，这样就失去了模板的优势，而是把模板拆成可复用的模板片段组合使用，
                        小提示：拆分模板组件通常有两个好处：
                                模板可复用，减少重复代码
                                主模板结构清晰
                                模板引擎不只是可以让你实现代码分离（业务逻辑代码和用户界面代码），也可以实现数据分离
                                （动态数据与静态数据）， 还可以实现代码单元共享（代码重用），甚至是多语言、动态页面
                                与静态页面自动均衡（SDE）等等与用户界面可能没有关系的功能。
                                
            业务逻辑代码和用户界面分离                    
                                
  3、劣势：：：所以，不管怎么样模板转换与目标代码执行肯定要消耗资源（只是消耗多点少点问题），肯定会比不用模板直接输出 HTML 来的有压力。
  
  
            前端模板是否好这是仁者见仁智者见智的事情，就不细说了，需要根据具体项目情况综合考虑。
            无非就是全前置，前后各半和全后置模板这几种。一般来说，前端模板会分担一部分服务器压力，毕竟把一（小）
            部分计算分摊到了客户端上。但是可能会给（半前置）模板统一管理和更新上带来点问题。也会给客户端增加（些许
            ）压力。或者会造成SEO、不支持JS浏览器如何显示等体验性问题需要解决。

          需要服务器来渲染不如直接输出html流畅
          
计划：：：先express+ejs  然后尝试分离写端口

          
          
