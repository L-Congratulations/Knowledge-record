一、变量作用域和闭包：
1、闭包的理解：子函数可以使用父函数的局部变量
          function aa() {//父函数
            var a = 12;
            function bb() {//子函数
                alert(a);//子函数可以使用父函数的局部变量
            }
            bb();
        }
二、运算符：
1、取余：%
----------------------------------------------------------------------------------------------------------------------------------
  做隔行变色：
  var list = document.querySelector('#list');
        var listChild = list.querySelectorAll('li');//和jQuery类似，得到的结果是一个数组
        for (var i = 0; i<listChild.length;i++){
            if(i%2 == 0){
                listChild[i].style.background = '#ccc'//listChild[i]一定要记住这种用法，！！！！！
            }
        }
   秒换算为分钟：
        var n = 1234;
        alert(parseInt(n/60) + '分' + (n%60) + '秒')
 ----------------------------------------------------------------------------------------------------------------------------------    
 2、==与！=（判断两个东西是否不相等，而！是取反）相反
 3、运算符优先级：括号。可以用括号来改变运算的优先级
 
 三、程序流程控制：
1、 switch（放的是值或者变量）{
      case 值1:
           ...
           break;
      ...
      default:
              ...
 }
 
 2、三目运算符 ？：（if...else...的简写）
 --------------------------------------------------------------------------------------------------------------------------------
         if(条件){
            语句1
        }else {
            语句2
        }
        条件？语句1：语句2
 ---------------------------------------------------------------------------------------------------------------------------------  
 3、跳出 break continue
 break：终止整个循环
 continue：终止本次循环，继续下一次循环
 
 4、什么是真，什么是假：
 真：true、非零数字、非空字符串、非空对象
 假：false、0、控制符串、null（空对象）、undefined
 
 四、json
 1、for in
 --------------------------------------------------------------------------------------------------------------------------------
        var obj = {a:2,b:3,c:5};
        for (var attr in obj){
            console.log(attr);//此处定义的变量arrt里面存的就是obj对象中的a,b,c（对象中的value）。for执行3次
            console.log(obj[attr]);//obj[attr]就是对应的每个value的key
        }       
  -------------------------------------------------------------------------------------------------------------------------------      




五、函数返回值
1、函数的返回值也就是函数的执行结果
      一个函数应该只返回一种类型的值
2、可变参：arguments （存放函数所有参数的一个数组）
---------------------------------------------------------------------------------------------------------------------------------
    当一个函数参数不定时，第一时间要想到arguments，然后利用他去控制参数arguments是一个包含所有参数的数组，arguments[i]就是具体的每个数组
          function show() {
            var result = 0;
            for (var i=0;i<arguments.length;i++){
                result += arguments[i]
            }
            console.log(result);
          }
          show(2,4,7)//13
------------------------------------------------------------------------------------------------------------------------------          
